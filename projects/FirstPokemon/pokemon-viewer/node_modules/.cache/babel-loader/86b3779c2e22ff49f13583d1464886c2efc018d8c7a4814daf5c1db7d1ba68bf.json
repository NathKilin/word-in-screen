{"ast":null,"code":"var _jsxFileName = \"C:\\\\1A_IITC\\\\Mine\\\\projects\\\\FirstPokemon\\\\pokemon-viewer\\\\src\\\\components\\\\PokemonList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokemonList() {\n  _s();\n  //variable to store list using the Hook 'useState'\n  //const [howItIs variable, update Function] = useState(original value)\n  const [pokemons, setPokemons] = useState([]);\n  //variable to indicate that the data is processing\n  //(starts empty)\n  //using 'useState' again\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    //function to seach the API\n    async function fetchPokemons() {\n      try {\n        //fetching 50 pokemons\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon/?limit=50');\n        //converting to data to a json response\n        const data = await response.json();\n        //updating the state with pokemons\n        setPokemons(data.results);\n        //storing the pokemons\n      } catch (error) {\n        console.error('Couldn´t fetch Pokélist. Error ', error);\n      } finally {\n        //giving an end to the loading\n        setLoading(false);\n      }\n    }\n    //calling the function\n    fetchPokemons();\n    //telling the fetch to be executed only once\n  }, []);\n  //nice text while loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregndo Pok\\xE9mon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n  //making the list with names of the pokémons\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: pokemons.map((pokemon, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: pokemon.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(PokemonList, \"fQreVV4R/KyuEkWz0eG2YtCgNFw=\");\n_c = PokemonList;\nexport default PokemonList;\nvar _c;\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PokemonList","_s","pokemons","setPokemons","loading","setLoading","fetchPokemons","response","fetch","data","json","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pokemon","index","name","_c","$RefreshReg$"],"sources":["C:/1A_IITC/Mine/projects/FirstPokemon/pokemon-viewer/src/components/PokemonList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction PokemonList(){\r\n    //variable to store list using the Hook 'useState'\r\n//const [howItIs variable, update Function] = useState(original value)\r\n    const [pokemons, setPokemons] = useState([]);\r\n    //variable to indicate that the data is processing\r\n    //(starts empty)\r\n    //using 'useState' again\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        //function to seach the API\r\n        async function fetchPokemons(){\r\n            try{\r\n                //fetching 50 pokemons\r\n                const response = await fetch('https://pokeapi.co/api/v2/pokemon/?limit=50');\r\n                //converting to data to a json response\r\n                const data = await response.json();\r\n                //updating the state with pokemons\r\n                setPokemons(data.results);\r\n                //storing the pokemons\r\n            } catch (error) {\r\n                console.error('Couldn´t fetch Pokélist. Error ', error);\r\n            } finally {\r\n                //giving an end to the loading\r\n                setLoading(false);\r\n            }\r\n        }\r\n            //calling the function\r\n        fetchPokemons();\r\n        //telling the fetch to be executed only once\r\n    }, []);\r\n    //nice text while loading\r\n    if (loading) {\r\n        return <p>Carregndo Pokémon...</p>;\r\n    }\r\n\r\n    //making the list with names of the pokémons\r\n    return (\r\n        <ul>\r\n            {pokemons.map((pokemon, index) => (\r\n                <li key={index}>{pokemon.name}</li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default PokemonList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAClB;EACJ;EACI,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA;EACA;EACA,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA,eAAeS,aAAaA,CAAA,EAAE;MAC1B,IAAG;QACC;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;QAC3E;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC;QACAP,WAAW,CAACM,IAAI,CAACE,OAAO,CAAC;QACzB;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D,CAAC,SAAS;QACN;QACAP,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;IACI;IACJC,aAAa,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;EACA,IAAIF,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAe,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtC;;EAEA;EACA,oBACInB,OAAA;IAAAe,QAAA,EACKZ,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBtB,OAAA;MAAAe,QAAA,EAAiBM,OAAO,CAACE;IAAI,GAApBD,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACjB,EAAA,CA5CQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}